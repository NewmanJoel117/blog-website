import json
from flask import Flask, render_template, request
import smtplib
import os
from dotenv import load_dotenv

# Initialize Flask app
app = Flask(__name__)

# Load environment variables from .env file
load_dotenv()

# Get email credentials from environment variables
OWN_EMAIL = os.getenv("OWN_EMAIL")  # Ensure this key is correctly set in your .env file
OWN_PASSWORD = os.getenv("OWN_PASSWORD")  # Ensure this key is correctly set in your .env file

# Static blog post data
posts = [
    {
        "id": 1,
        "source": {"id": "reuters", "name": "Reuters"},
        "author": "Joey Roulette",
        "title": "SpaceX catches giant Starship booster in fifth flight test - Reuters",
        "description": "The company achieved another novel engineering feat in its push to build a reusable moon and Mars vehicle.",
        "url": "https://www.reuters.com/technology/space/spacex-launches-fifth-starship-test-eyes-novel-booster-catch-2024-10-13/",
        "urlToImage": "https://www.reuters.com/resizer/v2/F63OT2AUDJJWVDZTI53UJRUZQ4.jpg",
        "publishedAt": "2024-10-13T19:56:25Z",
        "content": "null"
    },
    {
        "id": 2,
        "source": {"id": "wccftech", "name": "Wccftech"},
        "author": "Hassan Mujtaba",
        "title": "NVIDIA GeForce RTX 5090 GPU Won’t Have A Significant Price Increase Over RTX 4090 - Wccftech",
        "description": "NVIDIA's GeForce RTX 5090 GPU won't cost significantly more than the RTX 4090...",
        "url": "https://wccftech.com/nvidia-geforce-rtx-5090-gpu-wont-have-significant-price-increase-over-4090/",
        "urlToImage": "https://cdn.wccftech.com/wp-content/uploads/2024/07/NVIDIA-GeForce-RTX-5090-GPU.jpg",
        "publishedAt": "2024-10-13T18:00:00Z",
        "content": "NVIDIA's GeForce RTX 5090 GPU won't cost significantly more than the RTX 4090..."
    },
    {
        "id": 3,
        "source": {"id": "gizmodo", "name": "Gizmodo"},
        "author": "Justin Carter",
        "title": "Hasbro's Power Rangers Auction Upsets Actors and Fans - Gizmodo",
        "description": "An upcoming auction has brought controversy and a more money-focused conclusion...",
        "url": "https://gizmodo.com/power-rangers-hasbro-auction-2000511546",
        "urlToImage": "https://gizmodo.com/app/uploads/2024/10/powerrangers-cosmic-suits.jpg",
        "publishedAt": "2024-10-13T17:50:40Z",
        "content": "Last year, Power Rangers: Cosmic Fury brought a definitive end to the 30-year TV saga..."
    },
    {
        "id": 4,
        "source": {"id": "techcrunch", "name": "TechCrunch"},
        "author": "Kyle Wiggers",
        "title": "The promise and perils of synthetic data - TechCrunch",
        "description": "Big tech companies — and startups — are increasingly using synthetic data to train their AI models...",
        "url": "https://techcrunch.com/2024/10/13/the-promise-and-perils-of-synthetic-data/",
        "urlToImage": "https://techcrunch.com/wp-content/uploads/2021/01/Hiretual-Techcrunch_article_2_image_2.jpeg?resize=1200,600",
        "publishedAt": "2024-10-13T16:43:42Z",
        "content": "Is it possible for an AI to be trained just on data generated by another AI?..."
    }
]


# Route to render homepage with blog posts
@app.route('/')
def get_all_posts():
    return render_template("index.html", all_posts=posts)


# Route to render 'About' page
@app.route("/about")
def about():
    return render_template("about.html")


# Route to handle contact form submission
@app.route("/contact", methods=["GET", "POST"])
def contact():
    if request.method == "POST":
        data = request.form
        send_email(data["name"], data["email"], data["phone"], data["message"])
        return render_template("contact.html", msg_sent=True)
    return render_template("contact.html", msg_sent=False)


# Function to send email using smtplib
def send_email(name, email, phone, message):
    email_message = f"Subject: New Message\n\nName: {name}\nEmail: {email}\nPhone: {phone}\nMessage:{message}"
    try:
        with smtplib.SMTP("smtp.gmail.com", 587) as connection:
            connection.starttls()
            connection.login(OWN_EMAIL, OWN_PASSWORD)
            connection.sendmail(OWN_EMAIL, OWN_EMAIL, email_message)
    except Exception as e:
        print(f"Error sending email: {e}")


# Route to render individual blog posts
@app.route("/post/<int:index>")
def show_post(index):
    requested_post = next((post for post in posts if post["id"] == index), None)
    return render_template("post.html", post=requested_post)


# Run the Flask app
if __name__ == "__main__":
    app.run(debug=True)
